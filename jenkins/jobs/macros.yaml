
###############################################################################
# Project building routines
###############################################################################

- builder:
    name: node-git-prep
    builders:
        - shell: |
            #!/bin/bash
            if [ ! -d "/srv/git/infrastructure" ]; then
                mkdir -p "/srv/git/infrastructure"
                pushd "/srv/git/infrastructure"
                git init
                git remote add origin https://gerrit.asterisk.org/infrastructure
                popd
            fi
            pushd "/srv/git/infrastructure"
            git fetch origin
            git checkout master
            git pull
            popd

- builder:
    name: gerrit-git-prep
    builders:
        - shell: |
            #!/bin/bash
            export BRANCH={branch}
            if [ -z "$ZUUL_PROJECT" ]; then
                export ZUUL_PROJECT={project}
            fi
            sudo /srv/git/infrastructure/jenkins/scripts/gerrit-git-prep.sh https://gerrit.asterisk.org https://gerrit.asterisk.org asterisk

- builder:
    name: build-asterisk
    builders:
        - shell: |
            #!/bin/bash
            sudo /srv/git/infrastructure/jenkins/scripts/build-asterisk.sh {build-asterisk-params}

- builder:
    name: run-asterisk-unittests
    builders:
        - build-asterisk:
            build-asterisk-params: '-v -e app_voicemail -e app_directory -e test_voicemail_api -e FILE_STORAGE -e DO_CRASH {build-asterisk-params}'
        - shell: |
            #!/bin/bash
            /srv/git/infrastructure/jenkins/scripts/run-asterisk-unittests.sh

- builder:
    name: prep-testsuite
    builders:
        - shell: |
            #!/bin/bash
            /srv/git/infrastructure/jenkins/scripts/prep-testsuite.sh https://gerrit.asterisk.org

- builder:
    name: run-testsuite
    builders:
        - shell: |
            #!/bin/bash
            REF_DEBUG="{ref-debug}"
            sudo /srv/git/infrastructure/jenkins/scripts/run-testsuite.sh "{testsuite-params}"

- builder:
    name: python-coverage
    builders:
        - shell: "/srv/git/infrastructure/jenkins/scripts/run-python-cover.sh"

- builder:
    name: pep8
    builders:
        - shell: |
            #!/bin/bash
            export PYTHON_DIR={python_dir}
            export PEP8_OUTPUT={pep8_output}
            /srv/git/infrastructure/jenkins/scripts/run-pep8.sh

###############################################################################
# Project publishing routines
###############################################################################

- publisher:
    name: publish-asterisk-unittests
    publishers:
       - junit:
           results: '{project-name}/test-reports/*.xml'
           test-stability: true

- publisher:
     name: publish-asterisk-testsuite
     publishers:
       - junit:
           results: 'testsuite/asterisk-test-suite-report.xml'
           test-stability: true
       - archive:
           allow-empty: True
           artifacts: 'testsuite/logs.tar.gz'
           latest-only: False

- publisher:
     name: publish-pep8-results
     publishers:
       - archive:
           allow-empty: True
           artifacts: '{pep8_output}'
           latest-only: False

